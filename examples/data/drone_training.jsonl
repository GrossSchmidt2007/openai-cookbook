{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Let's get the drone in the air, can you make it take off"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "takeoff_drone", "arguments": "{\"altitude\": 100}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you lift the drone to 100 feet off the ground"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "takeoff_drone", "arguments": "{\"altitude\": 100}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you safely bring the drone down to the ground here?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "land_drone", "arguments": "\"{\\\"location\\\": \\\"current\\\"}\""}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Let's land the drone now, right where we are"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "land_drone", "arguments": "\"{\\\"location\\\": \\\"current\\\"}\""}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Bring the drone back home and land it safely"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "land_drone", "arguments": "\"{\\\"location\\\": \\\"home_base\\\"}\""}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the drone land at the base station?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "land_drone", "arguments": "\"{\\\"location\\\": \\\"home_base\\\"}\""}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you manually land the drone at a specific spot?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "land_drone", "arguments": "\"{\\\"location\\\": \\\"custom\\\"}\""}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I need you to land the drone at a custom location, please."}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "land_drone", "arguments": "\"{\\\"location\\\": \\\"custom\\\"}\""}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the drone move to the left by 10 units?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_drone_movement", "arguments": "{\"direction\": \"left\", \"distance\": 10}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I need the drone to shift to the left, can you do that?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_drone_movement", "arguments": "{\"direction\": \"left\", \"distance\": 10}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the drone go higher by 10 units"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_drone_movement", "arguments": "{\"direction\": \"up\", \"distance\": 10}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want the drone to ascend 10 meters, can you do that"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_drone_movement", "arguments": "{\"direction\": \"up\", \"distance\": 10}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the drone go lower by 10 feet?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_drone_movement", "arguments": "{\"direction\": \"down\", \"distance\": 10}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I need the drone to descend, can you do that?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_drone_movement", "arguments": "{\"direction\": \"down\", \"distance\": 10}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the drone go faster?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_speed", "arguments": "{\"speed\": 50}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I think the drone needs to speed up a bit, can you adjust it?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_speed", "arguments": "{\"speed\": 50}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you switch the camera to photo mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"photo\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to take some pictures, can you set the camera to photo mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"photo\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you switch the camera to photo mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"photo\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to take a picture, can you change the camera to photo mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"photo\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you switch the camera to video mode please"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"video\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to record a video, can you set the camera to that mode"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"video\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you start recording a video with the camera for 30 seconds?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"video\", \"duration\": 30}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to capture a video, can you set it up for 30 seconds?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"video\", \"duration\": 30}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you switch the camera to panorama mode please"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"panorama\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to take a panoramic shot, can you set the camera for that"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"panorama\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you switch the camera to panoramic mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"panorama\", \"duration\": 0}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to take a wide shot, can you set the camera to panorama?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "control_camera", "arguments": "{\"mode\": \"panorama\", \"duration\": 0}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you turn on the lights on the drone?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_lighting", "arguments": "{\"mode\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'd like to illuminate the drone, can you do that?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_lighting", "arguments": "{\"mode\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the drone lights flash?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_lighting", "arguments": "{\"mode\": \"blink\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want the drone lights to blink, please"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_lighting", "arguments": "{\"mode\": \"blink\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you set the drone lights to emergency mode"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_lighting", "arguments": "{\"mode\": \"sos\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Switch the lighting on the drone to SOS signal"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_drone_lighting", "arguments": "{\"mode\": \"sos\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you switch on the battery saver mode please?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_battery_saver_mode", "arguments": "{\"status\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'm running low on battery, can you activate the power-saving mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_battery_saver_mode", "arguments": "{\"status\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "The battery saver mode is draining the battery, can you turn it off"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_battery_saver_mode", "arguments": "{\"status\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I need more power, can you disable the battery saver mode"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_battery_saver_mode", "arguments": "{\"status\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I keep almost hitting things, can you turn on the obstacle avoidance"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_obstacle_avoidance", "arguments": "{\"mode\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you activate the system that helps me avoid obstacles"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_obstacle_avoidance", "arguments": "{\"mode\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I don't want the car to avoid obstacles automatically"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_obstacle_avoidance", "arguments": "{\"mode\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you turn off the obstacle avoidance feature please?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_obstacle_avoidance", "arguments": "{\"mode\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you enable the follow me mode so the drone can track me?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_follow_me_mode", "arguments": "{\"status\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want the drone to follow me, can you turn on that mode?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_follow_me_mode", "arguments": "{\"status\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you stop the drone from following me now?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_follow_me_mode", "arguments": "{\"status\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I don't want the drone to follow me anymore, can you turn that off?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_follow_me_mode", "arguments": "{\"status\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "The sensors are not working correctly, can you recalibrate them"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "calibrate_sensors", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I think the sensors need to be adjusted, can you do that?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "calibrate_sensors", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'm getting tired, can you turn on the autopilot for a bit"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_autopilot", "arguments": "{\"status\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Let the car drive itself, turn on the autopilot"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_autopilot", "arguments": "{\"status\": \"on\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'm feeling like taking control, can you turn off the autopilot?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_autopilot", "arguments": "{\"status\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want to manually steer now, can you disable the autopilot please?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "set_autopilot", "arguments": "{\"status\": \"off\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you change the color of the lights to yellow?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"solid\", \"color\": \"yellow\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I prefer a solid pattern for the LED display, can you set that?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"solid\", \"color\": \"yellow\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the display show a solid white color"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"solid\", \"color\": \"white\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'd like the LED display to be a solid white"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"solid\", \"color\": \"white\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the lights flash on and off?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"blink\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want the LED display to alternate between on and off, can you do that?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"blink\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the lights flash in red?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"blink\", \"color\": \"red\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Change the LED display to blink in red please"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"blink\", \"color\": \"red\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the LED display flash in blue color?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"blink\", \"color\": \"blue\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want the LED display to blink, can you set it to blue?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"blink\", \"color\": \"blue\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you make the lights flash in blue?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"pulse\", \"color\": \"blue\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'd like the LED display to pulse in blue, please"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"pulse\", \"color\": \"blue\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you change the color and pattern of the LEDs?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"pulse\", \"color\": \"white\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'd like to see the LEDs pulse in white, can you set that up?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"pulse\", \"color\": \"white\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you change the LED display to show a rainbow pattern in yellow?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"rainbow\", \"color\": \"yellow\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I want the LED display to be colorful, can you set it to rainbow with yellow color?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"rainbow\", \"color\": \"yellow\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Can you change the display to show a rainbow pattern in white color?"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"rainbow\", \"color\": \"white\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I'd like the LED display to cycle through colors starting with white and then to a rainbow pattern"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "configure_led_display", "arguments": "{\"pattern\": \"rainbow\", \"color\": \"white\"}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "I don't think we should go with that plan, can you reject it"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Let's not move forward with that, can you decline the request"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Translate broadcast message to another language"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Automatically capture photos when face is detected"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Detect nearby drones"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Measure wind resistance"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Capture slow motion video"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Adjust drone's altitude to ground level changes"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Display custom message on LED display"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Sync drone's time with smartphone"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Alert when drone travels out of designated area"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Detect moisture levels"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Automatically follow GPS tagged object"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Toggle night vision mode"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Maintain current altitude when battery is low"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Decide best landing spot using AI"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
{"messages": [{"role": "system", "content": "You are an intelligent AI that controls a drone. Given a command or request from the user,\ncall one of your functions to complete the request. If the request cannot be completed by your available functions, call the reject_request function.\nIf the request is ambiguous or unclear, reject the request."}, {"role": "user", "content": "Program drone's route based on wind direction"}, {"role": "assistant", "tool_calls": [{"id": "call_id", "type": "function", "function": {"name": "reject_request", "arguments": "{}"}}]}], "parallel_tool_calls": false, "tools": [{"type": "function", "function": {"name": "takeoff_drone", "description": "Initiate the drone's takeoff sequence.", "parameters": {"type": "object", "properties": {"altitude": {"type": "integer", "description": "Specifies the altitude in meters to which the drone should ascend."}}, "required": ["altitude"]}}}, {"type": "function", "function": {"name": "land_drone", "description": "Land the drone at its current location or a specified landing point.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "enum": ["current", "home_base", "custom"], "description": "Specifies the landing location for the drone."}, "coordinates": {"type": "object", "description": "GPS coordinates for custom landing location. Required if location is 'custom'."}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "control_drone_movement", "description": "Direct the drone's movement in a specific direction.", "parameters": {"type": "object", "properties": {"direction": {"type": "string", "enum": ["forward", "backward", "left", "right", "up", "down"], "description": "Direction in which the drone should move."}, "distance": {"type": "integer", "description": "Distance in meters the drone should travel in the specified direction."}}, "required": ["direction", "distance"]}}}, {"type": "function", "function": {"name": "set_drone_speed", "description": "Adjust the speed of the drone.", "parameters": {"type": "object", "properties": {"speed": {"type": "integer", "description": "Specifies the speed in km/h."}}, "required": ["speed"]}}}, {"type": "function", "function": {"name": "control_camera", "description": "Control the drone's camera to capture images or videos.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["photo", "video", "panorama"], "description": "Camera mode to capture content."}, "duration": {"type": "integer", "description": "Duration in seconds for video capture. Required if mode is 'video'."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "control_gimbal", "description": "Adjust the drone's gimbal for camera stabilization and direction.", "parameters": {"type": "object", "properties": {"tilt": {"type": "integer", "description": "Tilt angle for the gimbal in degrees."}, "pan": {"type": "integer", "description": "Pan angle for the gimbal in degrees."}}, "required": ["tilt", "pan"]}}}, {"type": "function", "function": {"name": "set_drone_lighting", "description": "Control the drone's lighting for visibility and signaling.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off", "blink", "sos"], "description": "Lighting mode for the drone."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "return_to_home", "description": "Command the drone to return to its home or launch location.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_battery_saver_mode", "description": "Toggle battery saver mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle battery saver mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "set_obstacle_avoidance", "description": "Configure obstacle avoidance settings.", "parameters": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["on", "off"], "description": "Toggle obstacle avoidance."}}, "required": ["mode"]}}}, {"type": "function", "function": {"name": "set_follow_me_mode", "description": "Enable or disable 'follow me' mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle 'follow me' mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "calibrate_sensors", "description": "Initiate calibration sequence for drone's sensors.", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "set_autopilot", "description": "Enable or disable autopilot mode.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["on", "off"], "description": "Toggle autopilot mode."}}, "required": ["status"]}}}, {"type": "function", "function": {"name": "configure_led_display", "description": "Configure the drone's LED display pattern and colors.", "parameters": {"type": "object", "properties": {"pattern": {"type": "string", "enum": ["solid", "blink", "pulse", "rainbow"], "description": "Pattern for the LED display."}, "color": {"type": "string", "enum": ["red", "blue", "green", "yellow", "white"], "description": "Color for the LED display. Not required if pattern is 'rainbow'."}}, "required": ["pattern"]}}}, {"type": "function", "function": {"name": "set_home_location", "description": "Set or change the home location for the drone.", "parameters": {"type": "object", "properties": {"coordinates": {"type": "object", "description": "GPS coordinates for the home location."}}, "required": ["coordinates"]}}}, {"type": "function", "function": {"name": "reject_request", "description": "Use this function if the request is not possible.", "parameters": {"type": "object", "properties": {}}}}]}
